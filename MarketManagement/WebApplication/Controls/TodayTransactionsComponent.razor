@inject ITransactionsForTodayUseCase TransactionsForTodayUseCase
@if(transactions!=null){
<table class="table">
    <thead>
        <tr>
            <th>Cashier</th>
            <th>Product Name</th>
            <th>Date</th>
            <th>Qty Before</th>
            <th>Qty Sold</th>
            <th>Qty After</th>
            <th>Sold Amt</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var t in transactions)
        {
        <tr>
            <td>@t.Cashier</td>
            <td>@t.ProductName</td>
            <td>@t.Time.ToString("MM/dd hh:mm")</td>
            <td>@t.BeforeQuantity</td>
            <td>@t.SoldQuantity</td>
            <td>@(t.BeforeQuantity-t.SoldQuantity)</td>
            <td>@(string.Format("{0:c}",t.SoldQuantity*t.Price))</td>
        </tr>
        }
    </tbody>

</table>
}

@code {
    private IEnumerable<Transaction> transactions;

    public void LoadTransactions(string cashier)
    {
        transactions=TransactionsForTodayUseCase.Execute(cashier);
        StateHasChanged();
    }
}
