@page "/cashierconsole"
@attribute [Authorize(Policy = "CashierOnly")]


@if (!string.IsNullOrEmpty(cashier))
  {
    <div class="row">
        <div class="col-7">
            <h3>Cashier's Console</h3>
        </div>
        <div class="col-2">
            <label for="cashier">Cashier name</label>
        </div>
        <div class="col-3">
            <div class="form-group">
                <input type="text" id="cashier" class="form-control" @bind-value="cashier" />
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-4">
            <WebApplication.Controls.SelectProductForSellingComponent OnProductSelected="SelectProduct"></WebApplication.Controls.SelectProductForSellingComponent>
            <br />
            <WebApplication.Controls.SellProductComponent Cashier="@cashier"
                                                          SelectedProduct="selectedProduct"
                                                          OnProductSold="SellProduct"></WebApplication.Controls.SellProductComponent>
        </div>
        <div class="col">
            <TodayTransactionsComponent @ref="transactionsComponent"></TodayTransactionsComponent>

        </div>
    </div>
}
@code {
    private TodayTransactionsComponent transactionsComponent;
    private Product selectedProduct;
    private string cashier;

    [CascadingParameter]
    private Task<AuthenticationState> _authState { get; set; }
    private AuthenticationState authState;


    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        cashier = authState.User.Identity.Name;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            transactionsComponent.LoadTransactions(cashier);
        }
    }
    private void SelectProduct(Product p)
    {
        selectedProduct = p;

    }
    private void SellProduct(Product p)
    {
        transactionsComponent.LoadTransactions(cashier);
    }
}
